# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
  - releases/*

jobs:
- job:
  timeoutInMinutes: 0
  # Based on instructions found here:
  # https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml&viewFallbackFrom=vsts#hosted-linux-preview-pool-deprecation
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  #- script: sudo apt-get update -y && sudo ACCEPT_EULA=Y apt-get upgrade -y
  #  displayName: Update packages
  - script: | 
      sudo apt-get purge -y libssl-dev/xenial
      sudo apt-get update
      sudo apt-cache search libssl-dev
      sudo apt-get install -y libssl-dev
    displayName: Downgrade OpenSSL lib

  - script: |
      dpkg -S /usr/lib/x86_64-linux-gnu/libcrypto.a
      dpkg -l | grep libssl-dev
    displayName: Debug OpenSSL bins

  - script: git submodule update --init --recursive
    displayName: Initialize submodules
    
  - script: sed -i 's/"${MEM_MEG}" -lt 7000/"${MEM_MEG}" -lt 4000/g' scripts/eosio_build_ubuntu.sh
    displayName: Override EOS build script RAM check

  - script: sed -i 's/\.\/bootstrap\.sh --prefix=\$BOOST_ROOT/\.\/bootstrap\.sh --prefix=\$BOOST_ROOT --with-toolset=clang/' scripts/eosio_build_ubuntu.sh
    displayName: Force Boost compilation with clang

  #- script: sed -i 's/sudo apt-get -y install ${DEP}/sudo apt-get -y install ${DEP}/'

  - script: scripts/eosio_build.sh -s EOS -y
    displayName: 'Build EOSIO'

#resources:
#  containers:
#  - container: eosio_builder
#    image: ubuntu:18.04
#container: eosio_builder
